/*------------------------------------------------------------------------------
 * This code was generated by Spiral Multiplier Block Generator, www.spiral.net
 * Copyright (c) 2006, Carnegie Mellon University
 * All rights reserved.
 * The code is distributed under a BSD style license
 * (see http://www.opensource.org/licenses/bsd-license.php)
 *------------------------------------------------------------------------------ */

module tan_multiplier_32_sec_1 (
    X,
    Y1,
    Y2,
    Y3,
    Y4,
    Y5,
    Y6,
    Y7,
    Y8,
    Y9,
    Y10,
    Y11,
    Y12,
    Y13,
    Y14,
    Y15,
    Y16
);

  // Port mode declarations:
  input  signed  [31:0] X;
  output signed  [31:0]
    Y1,
    Y2,
    Y3,
    Y4,
    Y5,
    Y6,
    Y7,
    Y8,
    Y9,
    Y10,
    Y11,
    Y12,
    Y13,
    Y14,
    Y15,
    Y16;

  wire [31:0] Y [0:15];

  assign Y1 = Y[0];
  assign Y2 = Y[1];
  assign Y3 = Y[2];
  assign Y4 = Y[3];
  assign Y5 = Y[4];
  assign Y6 = Y[5];
  assign Y7 = Y[6];
  assign Y8 = Y[7];
  assign Y9 = Y[8];
  assign Y10 = Y[9];
  assign Y11 = Y[10];
  assign Y12 = Y[11];
  assign Y13 = Y[12];
  assign Y14 = Y[13];
  assign Y15 = Y[14];
  assign Y16 = Y[15];

  //Multipliers:

  wire signed [36:0]
    w1,
    w4,
    w5,
    w8,
    w9,
    w32,
    w31,
    w33,
    w16,
    w11,
    w23,
    w27,
    w36,
    w35,
    w49,
    w64,
    w55,
    w80,
    w79,
    w111,
    w132,
    w131,
    w640,
    w671,
    w17,
    w66,
    w83,
    w63,
    w272,
    w335,
    w40,
    w44,
    w62,
    w70,
    w92,
    w108,
    w166,
    w222;

  assign w1 = X;
  assign w4 = w1 << 2;
  assign w5 = w1 + w4;
  assign w8 = w1 << 3;
  assign w9 = w1 + w8;
  assign w32 = w1 << 5;
  assign w31 = w32 - w1;
  assign w33 = w1 + w32;
  assign w16 = w1 << 4;
  assign w11 = w16 - w5;
  assign w23 = w32 - w9;
  assign w27 = w32 - w5;
  assign w36 = w9 << 2;
  assign w35 = w36 - w1;
  assign w49 = w33 + w16;
  assign w64 = w1 << 6;
  assign w55 = w64 - w9;
  assign w80 = w5 << 4;
  assign w79 = w80 - w1;
  assign w111 = w31 + w80;
  assign w132 = w33 << 2;
  assign w131 = w132 - w1;
  assign w640 = w5 << 7;
  assign w671 = w31 + w640;
  assign w17 = w1 + w16;
  assign w66 = w33 << 1;
  assign w83 = w17 + w66;
  assign w63 = w64 - w1;
  assign w272 = w17 << 4;
  assign w335 = w63 + w272;
  assign w40 = w5 << 3;
  assign w44 = w11 << 2;
  assign w62 = w31 << 1;
  assign w70 = w35 << 1;
  assign w92 = w23 << 2;
  assign w108 = w27 << 2;
  assign w166 = w83 << 1;
  assign w222 = w111 << 1;

  assign Y[0] = w33[36:5];
  assign Y[1] = w36[36:5];
  assign Y[2] = w40[36:5];
  assign Y[3] = w44[36:5];
  assign Y[4] = w49[36:5];
  assign Y[5] = w55[36:5];
  assign Y[6] = w62[36:5];
  assign Y[7] = w70[36:5];
  assign Y[8] = w79[36:5];
  assign Y[9] = w92[36:5];
  assign Y[10] = w108[36:5];
  assign Y[11] = w131[36:5];
  assign Y[12] = w166[36:5];
  assign Y[13] = w222[36:5];
  assign Y[14] = w335[36:5];
  assign Y[15] = w671[36:5];

endmodule //tan_multiplier_32_sec_1

